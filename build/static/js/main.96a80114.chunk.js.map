{"version":3,"sources":["theme/index.ts","components/Layout.tsx","components/Identicon.tsx","components/ConnectButton.tsx","components/AccountModal.tsx","components/Main.tsx","App.tsx","index.tsx"],"names":["extendTheme","fonts","heading","body","Layout","children","flexDirection","alignItems","justifyContent","h","bg","StyledIdenticon","styled","div","Identicon","ref","useRef","account","useEthers","useEffect","current","innerHTML","appendChild","Jazzicon","parseInt","slice","axios","require","ConnectButton","handleOpenModal","activateBrowserWallet","etherBalance","useEtherBalance","discordID","useParams","undefined","a","console","log","post","address","result","data","connect","display","background","borderRadius","py","px","color","fontSize","parseFloat","formatEther","toFixed","onClick","border","_hover","borderStyle","borderColor","backgroundColor","m","height","fontWeight","mr","length","_active","AccountModal","isOpen","onClose","deactivate","isCentered","size","pt","pb","mb","variant","textDecoration","mt","lineHeight","ml","alignContent","Copy","href","isExternal","ExternalLink","borderBottomLeftRadius","borderBottomRightRadius","p","textAlign","Center","useDisclosure","onOpen","theme","App","path","element","ReactDOM","render","StrictMode","DAppProvider","config","document","getElementById"],"mappings":"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","file":"static/js/main.96a80114.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nexport default extendTheme({\r\n  fonts: {\r\n    heading: \"Inter\",\r\n    body: \"Inter\",\r\n  },\r\n});\r\n","import { ReactNode } from \"react\";\r\nimport { Flex } from \"@chakra-ui/react\";\r\n\r\ntype Props = {\r\n  children?: ReactNode;\r\n};\r\n\r\nexport default function Layout({ children }: Props) {\r\n  return (\r\n    <Flex\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      h=\"100vh\"\r\n      bg=\"blue.800\"\r\n    >\r\n      {children}\r\n    </Flex>\r\n  );\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\nimport { useEthers } from \"@usedapp/core\";\r\nimport Jazzicon from \"@metamask/jazzicon\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst StyledIdenticon = styled.div`\r\n  height: 1rem;\r\n  width: 1rem;\r\n  border-radius: 1.125rem;\r\n  background-color: black;\r\n`;\r\n\r\nexport default function Identicon() {\r\n  const ref = useRef<HTMLDivElement>();\r\n  const { account } = useEthers();\r\n\r\n  useEffect(() => {\r\n    if (account && ref.current) {\r\n      ref.current.innerHTML = \"\";\r\n      ref.current.appendChild(Jazzicon(16, parseInt(account.slice(2, 10), 16)));\r\n    }\r\n  }, [account]);\r\n\r\n  return <StyledIdenticon ref={ref as any} />;\r\n}\r\n","import { Button, Box, Text } from \"@chakra-ui/react\";\r\nimport { useEthers, useEtherBalance } from \"@usedapp/core\";\r\nimport { formatEther } from \"@ethersproject/units\";\r\nimport Identicon from \"./Identicon\";\r\nimport { useParams } from \"react-router\"\r\nimport { useEffect,useState } from \"react\"\r\nconst axios = require('axios');\r\n\r\ntype Props = {\r\n  handleOpenModal: any,\r\n};\r\n\r\nexport default function ConnectButton({ handleOpenModal}: Props) {\r\n  const { activateBrowserWallet, account } = useEthers();\r\n  const etherBalance = useEtherBalance(account);\r\n  let { discordID } = useParams()\r\n\r\n  function handleConnectWallet() {\r\n    activateBrowserWallet();\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    if (account === undefined || discordID === undefined ) return\r\n    const connect = async () => {\r\n      console.log(discordID, account)\r\n      const result = await axios.post(`http://localhost:3001/connect`,{\r\n        discordID: discordID,\r\n        address: account\r\n      })\r\n      discordID = result.data\r\n    } \r\n    connect();\r\n  }, [account]);\r\n\r\n  return account ? (\r\n    <Box\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      background=\"gray.700\"\r\n      borderRadius=\"xl\"\r\n      py=\"0\"\r\n    >\r\n      <Box px=\"3\">\r\n        <Text color=\"white\" fontSize=\"md\">\r\n          {etherBalance && parseFloat(formatEther(etherBalance)).toFixed(3)} ETH\r\n        </Text>\r\n      </Box>\r\n      <Box px=\"3\">\r\n        <Text color=\"white\" fontSize=\"md\">\r\n          {discordID} DiscordID\r\n        </Text>\r\n      </Box>\r\n      <Button\r\n        onClick={handleOpenModal}\r\n        bg=\"gray.800\"\r\n        border=\"1px solid transparent\"\r\n        _hover={{\r\n          border: \"1px\",\r\n          borderStyle: \"solid\",\r\n          borderColor: \"blue.400\",\r\n          backgroundColor: \"gray.700\",\r\n        }}\r\n        borderRadius=\"xl\"\r\n        m=\"1px\"\r\n        px={3}\r\n        height=\"38px\"\r\n      >\r\n        <Text color=\"white\" fontSize=\"md\" fontWeight=\"medium\" mr=\"2\">\r\n          {account &&\r\n            `${account.slice(0, 6)}...${account.slice(\r\n              account.length - 4,\r\n              account.length\r\n            )}`}\r\n        </Text>\r\n        <Identicon />\r\n      </Button>\r\n    </Box>\r\n  ) : (\r\n    <Button\r\n      onClick={handleConnectWallet}\r\n      bg=\"blue.800\"\r\n      color=\"blue.300\"\r\n      fontSize=\"lg\"\r\n      fontWeight=\"medium\"\r\n      borderRadius=\"xl\"\r\n      border=\"1px solid transparent\"\r\n      _hover={{\r\n        borderColor: \"blue.700\",\r\n        color: \"blue.400\",\r\n      }}\r\n      _active={{\r\n        backgroundColor: \"blue.800\",\r\n        borderColor: \"blue.700\",\r\n      }}\r\n    >\r\n      Connect to a wallet\r\n    </Button>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Link,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { ExternalLinkIcon, CopyIcon } from \"@chakra-ui/icons\";\r\nimport { useEthers } from \"@usedapp/core\";\r\nimport Identicon from \"./Identicon\";\r\n\r\ntype Props = {\r\n  isOpen: any;\r\n  onClose: any;\r\n};\r\n\r\nexport default function AccountModal({ isOpen, onClose }: Props) {\r\n  const { account, deactivate } = useEthers();\r\n\r\n  function handleDeactivateAccount() {\r\n    deactivate();\r\n    onClose();\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered size=\"md\">\r\n      <ModalOverlay />\r\n      <ModalContent\r\n        background=\"gray.900\"\r\n        border=\"1px\"\r\n        borderStyle=\"solid\"\r\n        borderColor=\"gray.700\"\r\n        borderRadius=\"3xl\"\r\n      >\r\n        <ModalHeader color=\"white\" px={4} fontSize=\"lg\" fontWeight=\"medium\">\r\n          Account\r\n        </ModalHeader>\r\n        <ModalCloseButton\r\n          color=\"white\"\r\n          fontSize=\"sm\"\r\n          _hover={{\r\n            color: \"whiteAlpha.700\",\r\n          }}\r\n        />\r\n        <ModalBody pt={0} px={4}>\r\n          <Box\r\n            borderRadius=\"3xl\"\r\n            border=\"1px\"\r\n            borderStyle=\"solid\"\r\n            borderColor=\"gray.600\"\r\n            px={5}\r\n            pt={4}\r\n            pb={2}\r\n            mb={3}\r\n          >\r\n            <Flex justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\r\n              <Text color=\"gray.400\" fontSize=\"sm\">\r\n                Connected with MetaMask\r\n              </Text>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                borderColor=\"blue.800\"\r\n                borderRadius=\"3xl\"\r\n                color=\"blue.500\"\r\n                fontSize=\"13px\"\r\n                fontWeight=\"normal\"\r\n                px={2}\r\n                height=\"26px\"\r\n                _hover={{\r\n                  background: \"none\",\r\n                  borderColor: \"blue.300\",\r\n                  textDecoration: \"underline\",\r\n                }}\r\n                onClick={handleDeactivateAccount}\r\n              >\r\n                Change\r\n              </Button>\r\n            </Flex>\r\n            <Flex alignItems=\"center\" mt={2} mb={4} lineHeight={1}>\r\n              <Identicon />\r\n              <Text\r\n                color=\"white\"\r\n                fontSize=\"xl\"\r\n                fontWeight=\"semibold\"\r\n                ml=\"2\"\r\n                lineHeight=\"1.1\"\r\n              >\r\n                {account &&\r\n                  `${account.slice(0, 6)}...${account.slice(\r\n                    account.length - 4,\r\n                    account.length\r\n                  )}`}\r\n              </Text>\r\n            </Flex>\r\n            <Flex alignContent=\"center\" m={3}>\r\n              <Button\r\n                variant=\"link\"\r\n                color=\"gray.400\"\r\n                fontWeight=\"normal\"\r\n                fontSize=\"sm\"\r\n                _hover={{\r\n                  textDecoration: \"none\",\r\n                  color: \"whiteAlpha.800\",\r\n                }}\r\n              >\r\n                <CopyIcon mr={1} />\r\n                Copy Address\r\n              </Button>\r\n              <Link\r\n                fontSize=\"sm\"\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                href={`https://ropsten.etherscan.io/address/${account}`}\r\n                isExternal\r\n                color=\"gray.400\"\r\n                ml={6}\r\n                _hover={{\r\n                  color: \"whiteAlpha.800\",\r\n                  textDecoration: \"underline\",\r\n                }}\r\n              >\r\n                <ExternalLinkIcon mr={1} />\r\n                View on Explorer\r\n              </Link>\r\n            </Flex>\r\n          </Box>\r\n        </ModalBody>\r\n\r\n        <ModalFooter\r\n          justifyContent=\"end\"\r\n          background=\"gray.700\"\r\n          borderBottomLeftRadius=\"3xl\"\r\n          borderBottomRightRadius=\"3xl\"\r\n          p={6}\r\n        >\r\n          <Text\r\n            color=\"white\"\r\n            textAlign=\"left\"\r\n            fontWeight=\"medium\"\r\n            fontSize=\"md\"\r\n          >\r\n            Your transactions willl appear here...\r\n          </Text>\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n","import { ChakraProvider, useDisclosure } from \"@chakra-ui/react\";\nimport theme from \"../theme\";\nimport Layout from \"./Layout\";\nimport ConnectButton from \"./ConnectButton\";\nimport AccountModal from \"./AccountModal\";\nimport \"@fontsource/inter\";\n\nexport default function Center() {\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    return (\n        <ChakraProvider theme={theme}>\n        <Layout>\n            <ConnectButton handleOpenModal={onOpen} />\n            <AccountModal isOpen={isOpen} onClose={onClose} />\n        </Layout>\n        </ChakraProvider>\n    );\n}","import { ChakraProvider, useDisclosure } from \"@chakra-ui/react\";\nimport theme from \"./theme\";\nimport Layout from \"./components/Layout\";\nimport ConnectButton from \"./components/ConnectButton\";\nimport AccountModal from \"./components/AccountModal\";\nimport Center from \"./components/Main\";\nimport \"@fontsource/inter\";\nimport { BrowserRouter, Routes, Route} from 'react-router-dom'\nimport { useParams } from \"react-router\"\nimport { useEffect } from \"react\"\n\n\nfunction App() {  \n  return (\n    <BrowserRouter>\n      <Routes>\n            <Route path=\"/\" element={<Center/>}/>\n            <Route path=\"/:discordID\" element={<Center/>}/>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { DAppProvider } from \"@usedapp/core\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DAppProvider config={{}}>\n      <App />\n    </DAppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}